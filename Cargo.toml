[workspace]
resolver = "2"
members = [
	"crates/amt",
	"crates/encoder",
	"crates/ppot2ark",
	"grpc",
	"server",
]

[workspace.dependencies]
amt = { path = "./crates/amt", default-features = false }
grpc = { path = "./grpc" } 
server = { path = "./server" } 
zg-encoder = { path = "./crates/encoder" }

ag-types = { git = "https://github.com/0glabs/0g-ec-gpu.git", rev = "6ceca01ae330209227b3681788bfb9c85fbd3186" }
ag-cuda-ec = { git = "https://github.com/0glabs/0g-ec-gpu.git", rev = "6ceca01ae330209227b3681788bfb9c85fbd3186", default-features = false }

# Path for develop
# ag-types = { path = "../0g-ec-gpu/ag-types" }
# ag-cuda-ec = { path = "../0g-ec-gpu/ag-cuda-ec", default-features = false }


ark-ff = "0.4.0"
lazy_static = "1.2"
rustacuda = { package = "fil-rustacuda", version = "0.1.4" }
rayon = "1.10"
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.11", features = ["env-filter"] }
anyhow = { version = "1.0.71", features = ["backtrace"] }

[workspace.features]
parallel = ["amt/parallel", "zg-encoder/parallel", "grpc/parallel"]
cuda = ["amt/cuda-bn254", "zg-encoder/cuda", "grpc/cuda"]

[profile.dev.package]
rayon = { opt-level = 3 }
rayon-core = { opt-level = 3 }
ark-bn254 = { opt-level = 3 }
ark-ec = { opt-level = 3 }
ark-ff = { opt-level = 3 }
ark-poly = { opt-level = 3 }
ark-serialize = { opt-level = 3 }
ark-std = { opt-level = 3 }